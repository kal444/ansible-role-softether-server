---
# tasks file for ansible-role-softether-server
- include_tasks: buildtools.yml

- name: setup tmp path
  file: path={{ softether_tmp_path }} state=directory

- name: copy answer file to run make non-interactively
  copy: src=make.answers dest={{ softether_tmp_path }}/make.answers

- name: download package
  get_url: url={{ softether_url }} dest="{{ softether_tmp_path }}/{{ softether_package_file }}"
  register: download

- name: extract vpnserver package
  unarchive:
    src: "{{ softether_tmp_path}}/{{ softether_package_file }}"
    dest: "{{ softether_install_prefix }}"
    copy: false
  when: download.changed or softether_force_build

- name: execute build
  shell: make < {{ softether_tmp_path }}/make.answers
  args:
    chdir: "{{ softether_install_path }}"
  when: download.changed or softether_force_build

- include_tasks: permissionfix.yml

- name: copy vpnserver init.d script
  template: src=vpnserver.initd.j2 dest=/etc/init.d/vpnserver mode=0755

- name: copy vpnserver systemd unit file when needed
  template: src=vpnserver.service.j2 dest=/etc/systemd/system/vpnserver.service owner=root group=root mode=0755
  register: systemd_service_file
  when: >
    (ansible_distribution == 'Ubuntu' and ansible_distribution_version.split(".")[0]|int >= 16) or
    (ansible_distribution == 'Debian' and ansible_distribution_version.split(".")[0]|int >= 8) or
    (ansible_distribution == 'CentOS' and ansible_distribution_version.split(".")[0]|int >= 7) or
    (ansible_distribution == 'Fedora')

- name: systemd daemon reload
  command: systemctl daemon-reload
  when: systemd_service_file.changed

- name: ensure service is enabled at boot
  service: name=vpnserver enabled=yes

- name: ensure service is stopped before the config fie is updated/overwritten
  service: name=vpnserver state=stopped

- name: copy empty vpn server config (this will be initialized when service starts)
  template: src=vpn_server.config.j2 dest={{ softether_install_path }}/vpn_server.config backup=yes

- name: ensure service is started
  service: name=vpnserver state=started

- include_tasks: configvpn.yml
